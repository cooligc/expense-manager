{"version":3,"sources":["logo.svg","components/listItems.js","components/Chart.js","components/Deposits.js","components/Orders.js","components/scenes/AddExpense.js","redux/actions/scene-action.js","constants/scenes.js","components/MainList.js","components/scenes/Expenses.js","components/DashboardContent.js","components/Dashboard.js","App.js","reportWebVitals.js","redux/reducers/expense-reducer.js","redux/reducers/scene-reducer.js","redux/reducers/index.js","redux/store/store.js","index.js"],"names":["secondaryListItems","ListSubheader","inset","ListItem","button","ListItemIcon","ListItemText","primary","createData","time","amount","undefined","makeStyles","depositContext","flex","id","date","name","shipTo","paymentMethod","theme","seeMore","marginTop","spacing","AddExpense","FormControl","InputLabel","htmlFor","Input","aria-describedby","FormHelperText","Button","onClick","SET_SCENE","setScene","scene","scenes","MainList","dispatch","useDispatch","Expenses","DashboardContent","useStyles","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Dashboard","classes","useSelector","state","console","log","React","useState","open","setOpen","clsx","className","CssBaseline","AppBar","Toolbar","IconButton","edge","color","aria-label","Typography","component","variant","noWrap","Badge","badgeContent","Drawer","Divider","List","Container","maxWidth","currentScene","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INIT_STATE","sceneReducer","action","type","payload","rootReducer","combineReducers","value","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fbe8b8f1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\n\nexport const secondaryListItems = (\n  <div>\n    <ListSubheader inset>Saved reports</ListSubheader>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Current month\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Last quarter\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Year-end sale\" />\n    </ListItem>\n  </div>\n);","import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\nconst data = [\n  createData('00:00', 0),\n  createData('03:00', 300),\n  createData('06:00', 600),\n  createData('09:00', 800),\n  createData('12:00', 1500),\n  createData('15:00', 2000),\n  createData('18:00', 2400),\n  createData('21:00', 2400),\n  createData('24:00', undefined),\n];\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  return (\n    <React.Fragment>\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Sales ($)\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport default function Deposits() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Recent Deposits</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        $3,024.00\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on 15 March, 2019\n      </Typography>\n      <div>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          View balance\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n  return { id, date, name, shipTo, paymentMethod, amount };\n}\n\nconst rows = [\n  createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\n  createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\n  createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\n  createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\n  createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n];\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Orders() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Recent Orders</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Ship To</TableCell>\n            <TableCell>Payment Method</TableCell>\n            <TableCell align=\"right\">Sale Amount</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell>{row.date}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.shipTo}</TableCell>\n              <TableCell>{row.paymentMethod}</TableCell>\n              <TableCell align=\"right\">{row.amount}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          See more orders\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import { Button, FormControl, FormHelperText, Input, InputLabel } from '@material-ui/core'\nimport React from 'react'\n\nexport default function AddExpense() {\n\n    const addExpense = () => {\n\n    }\n\n    return (\n        <div>\n            <form >\n                <FormControl>\n                    <InputLabel htmlFor=\"my-input\">Expense Name</InputLabel>\n                    <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n                    <FormHelperText id=\"expenseName\">Expense Name</FormHelperText>\n                </FormControl>\n                <br />\n\n                <FormControl>\n                    <InputLabel htmlFor=\"my-input\">Expense Amount</InputLabel>\n                    <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n                    <FormHelperText id=\"expenseAmount\">Expense Amount</FormHelperText>\n                </FormControl>\n\n                <Button onClick={addExpense} />\n\n            </form>\n\n        </div>\n    )\n}\n","export const SET_SCENE = 'setScene'\n\nexport const setScene = (scene) => ({\n    'type': SET_SCENE,\n    'payload': scene\n})","export const scenes = {\n    'DASHBOARD' : 'dashboard',\n    'ADD_EXPENSE' : 'addExpense',\n    'ALL_EXPENSE' : 'allExpense'\n}","import { ListItem, ListItemIcon, ListItemText } from '@material-ui/core'\nimport React from 'react'\n\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport { setScene } from '../redux/actions/scene-action';\nimport { scenes } from '../constants/scenes';\nimport { useDispatch } from 'react-redux';\n\nexport default function MainList() {\n\n    const dispatch = useDispatch()\n\n    const openDashboard = () => {\n        dispatch(setScene(scenes.DASHBOARD))\n    }\n\n    const openAddExpense = () => {\n        dispatch(setScene(scenes.ADD_EXPENSE))\n    }\n\n    const listExpences = () => {\n        dispatch(setScene(scenes.ALL_EXPENSE))\n    }\n\n    return (\n        <div>\n            <ListItem button onClick={openDashboard}>\n                <ListItemIcon>\n                    <DashboardIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Dashboard\"/>\n            </ListItem>\n            <ListItem button onClick={openAddExpense}>\n                <ListItemIcon>\n                    <AddBoxIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Add Expense\" />\n            </ListItem>\n            <ListItem button onClick={listExpences}>\n                <ListItemIcon>\n                    <MonetizationOnIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"All Expenses\" />\n            </ListItem>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Expenses() {\n    return (\n        <div>\n            <h1> Expenses </h1>\n        </div>\n    )\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems, secondaryListItems } from './listItems';\nimport Chart from './Chart';\nimport Deposits from './Deposits';\nimport Orders from './Orders';\nimport AddExpense from './scenes/AddExpense';\nimport MainList from './MainList';\nimport { useSelector } from 'react-redux';\nimport { scenes } from '../constants/scenes';\nimport Expenses from './scenes/Expenses';\n\nexport default function DashboardContent() {\n    return (\n        <div>\n{/*             <Grid container spacing={3}>\n */}                {/* Chart */}\n                {/* <Grid item xs={12} md={8} lg={9}>\n                    <Paper className={fixedHeightPaper}>\n                        <Chart />\n                    </Paper>\n                </Grid> */}\n                {/* Recent Deposits */}\n                {/* <Grid item xs={12} md={4} lg={3}>\n                    <Paper className={fixedHeightPaper}>\n                        <Deposits />\n                    </Paper>\n                </Grid> */}\n                {/* Recent Orders */}\n                {/* <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <Orders />\n                    </Paper>\n                </Grid>\n            </Grid>\n            <Box pt={4}>\n                <Copyright />\n            </Box> */}\n            <h1>I am in Dashboard</h1>\n        </div>\n    )\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems, secondaryListItems } from './listItems';\nimport Chart from './Chart';\nimport Deposits from './Deposits';\nimport Orders from './Orders';\nimport AddExpense from './scenes/AddExpense';\nimport MainList from './MainList';\nimport { useSelector } from 'react-redux';\nimport { scenes } from '../constants/scenes';\nimport DashboardContent from './DashboardContent';\nimport Expenses from './scenes/Expenses';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"http://cooligc.github.io/expense-manager\">\n        Expense Manager\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n\n  const scene = useSelector(state => state.scene)\n  console.log(scene)\n\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Dashboard\n          </Typography>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List><MainList/></List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          {\n            scene?.currentScene === scenes.DASHBOARD && (<DashboardContent/>)\n          }\n          {\n            scene?.currentScene === scenes.ADD_EXPENSE && (<AddExpense/>)\n          }\n          {\n            scene?.currentScene === scenes.ALL_EXPENSE && (<Expenses/>)\n          }\n        </Container>\n      </main>\n    </div>\n  );\n}","import logo from './logo.svg';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\n\nfunction App() {\n  return (\n    <Dashboard/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const INIT_STATE = {\n    'value': [],\n    'isLoading': false\n}\n\nexport default function expenseReducer(state = INIT_STATE, action) {\n    switch (action.type) {\n        case 'addExpense':\n            return {\n                ...state,\n                value: [...state.value, action.payload]\n            }\n        default : \n            return state\n    }\n}\n\n// export default expenseReducer;","\nimport { scenes } from \"../../constants/scenes\";\nimport { SET_SCENE } from \"../actions/scene-action\";\n\nconst INIT_STATE = {\n    'currentScene': scenes.DASHBOARD\n}\n\nconst sceneReducer = (state = INIT_STATE, action) => {\n    switch (action.type) {\n        case SET_SCENE:\n            return {\n                ...state,\n                currentScene: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default sceneReducer;","import { combineReducers } from \"redux\";\nimport expenseReducer from \"./expense-reducer\";\nimport sceneReducer from \"./scene-reducer\";\n\nconst rootReducer = combineReducers({\n    'expense' : expenseReducer,\n    'scene' : sceneReducer\n})\n\nexport default rootReducer;","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers\";\n\nconst initialState = {\n        'value' : [],\n        'isLoading' : false\n    };\n\n\nconst store =  createStore(rootReducer,initialState);\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux';\nimport expenseReducer from './redux/reducers/expense-reducer';\nimport store from './redux/store/store';\n\n\n\n\n// const store = createStore(expenseReducer, {'expense' : []})\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}